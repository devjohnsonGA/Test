{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red164\green191\blue255;\red23\green23\blue23;\red255\green255\blue255;
\red252\green115\blue96;\red117\green255\blue242;\red254\green219\blue112;\red129\green131\blue134;}
{\*\expandedcolortbl;;\cssrgb\c70196\c80000\c100000;\cssrgb\c11765\c11765\c11765;\cssrgb\c100000\c100000\c100000;
\cssrgb\c100000\c53725\c45098;\cssrgb\c51373\c100000\c96078;\cssrgb\c100000\c87843\c51373;\cssrgb\c57647\c58431\c59608;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl480\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 const checkThatTwoPlusTwoEqualsFourAMillionTimes\cf4 \strokec4  = () => \{\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 for\cf4 \strokec4 (\cf2 \strokec2 let i\cf4 \strokec4  = \cf5 \strokec5 1\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4  <= \cf5 \strokec5 1000000\cf4 \strokec4 ; \cf5 \strokec5 i\cf4 \strokec4 ++) \{\cb1 \
\cb3     \cf2 \strokec2 if\cf4 \strokec4  ( (\cf5 \strokec5 2\cf4 \strokec4  + \cf5 \strokec5 2\cf4 \strokec4 ) != \cf5 \strokec5 4\cf4 \strokec4 ) \{\cb1 \
\cb3       \cf5 \strokec5 console\cf4 \strokec4 .\cf6 \strokec6 log\cf4 \strokec4 (\cf7 \strokec7 'Something has gone very wrong :( '\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3   \}\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 const addTwo\cf4 \strokec4  = \cf5 \strokec5 num\cf4 \strokec4  => \cf5 \strokec5 num\cf4 \strokec4  + \cf5 \strokec5 2\cf4 \strokec4 ;\cb1 \
\
\cf2 \cb3 \strokec2 const timeFuncRuntime\cf4 \strokec4  = \cf5 \strokec5 funcParameter\cf4 \strokec4  => \{\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 let t1\cf4 \strokec4  = \cf5 \strokec5 Date\cf4 \strokec4 .\cf6 \strokec6 now\cf4 \strokec4 ();\cb1 \
\cb3   \cf5 \strokec5 funcParameter\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 let t2\cf4 \strokec4  = \cf5 \strokec5 Date\cf4 \strokec4 .\cf6 \strokec6 now\cf4 \strokec4 ();\cb1 \
\cb3   \cf2 \strokec2 return\cf4 \strokec4  \cf5 \strokec5 t2\cf4 \strokec4  - \cf5 \strokec5 t1\cf4 \strokec4 ;\cb1 \
\cb3 \};\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf8 \cb3 \strokec8 // Write your code below\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf2 \cb3 \strokec2 const time2p2\cf4 \strokec4  = \cf5 \strokec5 timeFuncRuntime\cf4 \strokec4 (\cf5 \strokec5 checkThatTwoPlusTwoEqualsFourAMillionTimes\cf4 \strokec4 )\cb1 \
\
\cf2 \cb3 \strokec2 const checkConsistentOutput\cf4 \strokec4  = (\cf2 \strokec2 func\cf4 \strokec4 , \cf2 \strokec2 val\cf4 \strokec4 ) => \{\cb1 \
\pard\pardeftab720\sl480\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 let runOne\cf4 \strokec4  = \cf5 \strokec5 func\cf4 \strokec4 (\cf5 \strokec5 val\cf4 \strokec4 )\cb1 \
\cb3   \cf2 \strokec2 let runTwo\cf4 \strokec4  = \cf5 \strokec5 func\cf4 \strokec4 (\cf5 \strokec5 val\cf4 \strokec4 )\cb1 \
\cb3   \cf2 \strokec2 if\cf4 \strokec4 (\cf5 \strokec5 runOne\cf4 \strokec4  === \cf5 \strokec5 runTwo\cf4 \strokec4 )\{\cb1 \
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf5 \strokec5 runOne\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3   \cf2 \strokec2 else\cf4 \strokec4  \{\cb1 \
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf7 \strokec7 'This function returned inconsistent results'\cf4 \cb1 \strokec4 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl480\partightenfactor0
\cf5 \cb3 \strokec5 checkConsistentOutput\cf4 \strokec4 (\cf5 \strokec5 addTwo\cf4 \strokec4 , \cf5 \strokec5 5\cf4 \strokec4 )\cb1 \
}